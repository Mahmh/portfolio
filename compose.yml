services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: server_c
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    restart: always

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_SERVER_URL: ${VITE_BACKEND_SERVER_URL}
        VITE_UMAMI_SCRIPT_URL: ${VITE_UMAMI_SCRIPT_URL}
        VITE_UMAMI_WEBSITE_ID: ${VITE_UMAMI_WEBSITE_ID}
        VITE_CONTACT_EMAIL: ${VITE_CONTACT_EMAIL}
    container_name: client_c
    ports:
      - "5173:5173"
    env_file:
      - ./.env
    depends_on:
      - server

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx_c
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - client
      - server
  
  db:
    image: postgres:latest
    container_name: db_c
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
  
  umami:
    image: docker.umami.is/umami-software/umami:postgresql-latest
    container_name: umami_c
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      DATABASE_TYPE: postgresql
      APP_SECRET: ${UMAMI_APP_SECRET}
    depends_on:
      - db
    ports:
      - "3000:3000"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl https://mahermah.com:3000/api/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db_data: